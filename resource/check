#!/usr/bin/env python

import io
import sys
import json
import time
from datetime import datetime

import common


def main(hostname, username, private_key, key_type, path, version=None):
    private_key = common.make_key_from(private_key, key_type)
    with common.make_sftp(hostname, username, private_key) as sftp:
        contents = sftp.listdir_attr(path)

    versions = sorted([datetime.fromtimestamp(x.st_mtime) for x in contents])
    time.sleep(5)
    versions2 = sorted([datetime.fromtimestamp(x.st_mtime) for x in contents])

    if versions != versions2:
        if version is None:
            return []
        else:
            return [version]

    if version is not None:
        version = datetime.fromisoformat(version['date'])
        versions = [v for v in versions if v >= version]
    elif versions:
        versions = [versions[-1]]

    return [{'date': str(v)} for v in versions] 


if __name__ == '__main__':
    options = json.load(sys.stdin)
    response = main(**options['source'], version=options.get('version'))
    print(json.dumps(response))
